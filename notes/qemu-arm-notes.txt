$ yumdownloader --source directfb
$ rpm -i directfb-1.4.3-1.fc14.src.rpm 
$ cd ../SPECS/
$ rpmbuild -ba directfb.spec 
error: Failed build dependencies:
       libsysfs-devel is needed by directfb-1.4.3-1.fc14.x86_64
       libv4l-devel is needed by directfb-1.4.3-1.fc14.x86_64
       libvncserver-devel is needed by directfb-1.4.3-1.fc14.x86_64
       tslib-devel is needed by directfb-1.4.3-1.fc14.x86_64
$ yumdownloader --source libsysfs-devel libvncserver-devel libv4l-devel libsysfs-devel
$ rpm -i libv4l-0.8.1-1.fc14.src.rpm  libvncserver-0.9.7-4.fc14.src.rpm  sysfsutils-2.1.0-8.fc14.src.rpm  tslib-1.0-2.fc12.src.rpm lzo-2.03-3.fc12.src.rpm
$ cd ../SPECS/
$ rpmbuild -ba libv4l.spec libvncserver.spec tslib.spec sysfsutils.spec
$ for r in libv4l-0.8.1-1.fc14.src.rpm  libvncserver-0.9.7-4.fc14.src.rpm  sysfsutils-2.1.0-8.fc14.src.rpm  tslib-1.0-2.fc12.src.rpm lzo-2.03-3.fc12.src.rpm; do arm-koji build  --scratch dist-f13 $r ; done

brigde/tap


yum install openvpn bridge-utils



===============================================================================

hw/versatilepb.c: static void versatile_init(ram_addr_t ram_size,
                     const char *boot_device,
                     const char *kernel_filename, const char *kernel_cmdline,
                     const char *initrd_filename, const char *cpu_model,
                     int board_id)
calls this function:
    env = cpu_init(cpu_model);

which expands to a macro defined here:
target-arm/cpu.h: #define cpu_init cpu_arm_init

and this function gets called
target-arm/helper.c: CPUARMState *cpu_arm_init(const char *cpu_model)


LED Register 0x10000008
 - http://infocenter.arm.com/help/topic/com.arm.doc.dui0224i/Cachbhig.html
 -  only  [7:0] bits of [31:0] total
 -  rest of the [31:8] bits of [31:0] total are reserved

===============================================================================

Why Fedora ARM / RPM packaging?
 proven technology already in use on may of the most popular Distros
 reduce development time and time to market for your next device
 - OLPC is one such example



Fedora ARM Architecture
 - http://fedoraproject.org/wiki/User:Ctyler/Architectures/ARM
 - http://fedoraproject.org/wiki/Architectures/ARM/HowToQemu

RfsBuild - tool to build root filesystem
 - http://fedoraproject.org/wiki/Architectures/ARM/RfsBuild

Koji - the Fedora build system
 - http://fedoraproject.org/wiki/PackageMaintainers/UsingKoji


Anthony Ligouri - QEMU maintainer - http://wiki.qemu.org/ChangeLog
Rusty Russell - http://swtch.com/lguest/

Paul Brook - QEMU ARM creator

Linux on Omap3 - Beagleboard and the like:
 - http://vm-kernel.org/blog/2008/12/15/linux-is-running-on-qemu-omap3/

Embedded work in Qemu
 - http://qemu-forum.ipi.fi/viewtopic.php?f=22&t=2923&sid=fad1398e7ac4b986fa15338e39ec3b29


